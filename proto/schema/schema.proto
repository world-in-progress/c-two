// proto/schema/schema.proto
syntax = "proto3";

package schema;

import "proto/common/base.proto";

message GridAttribute {
    bool deleted = 1;
    bool activate = 2;
    int32 type = 3;
    int32 level = 4;
    int32 global_id = 5;
    double elevation = 6;
    optional double min_x = 7;
    optional double min_y = 8;
    optional double max_x = 9;
    optional double max_y = 10;
    optional int32 local_id = 11;
}

message SubdivideRule {
    repeated int32 rule = 1;
}

message InitializeRequest {
    string redis_host = 1;
    int32 redis_port = 2;
    int32 epsg = 3;
    repeated double bounds = 4; // [min_x, min_y, max_x, max_y]
    repeated float first_size = 5; // [width, height]
    repeated SubdivideRule subdivide_rules = 6;
}

message GetLocalIdsRequest {
    int32 level = 1;
    repeated int32 global_ids = 2;
}

message GetLocalIdsResponse {
    common.Status status = 1;
    string message = 2;
    repeated int32 local_ids = 3;
}

message GetCoordinatesRequest {
    int32 level = 1;
    repeated int32 global_ids = 2;
}

message GetCoordinatesResponse {
    common.Status status = 1;
    string message = 2;
    repeated double min_xs = 3;
    repeated double min_ys = 4;
    repeated double max_xs = 5;
    repeated double max_ys = 6;
}

message GetGridInfosRequest {
    int32 level = 1;
    repeated int32 global_ids = 2;
}

message GetGridInfosResponse {
    common.Status status = 1;
    string message = 2;
    repeated GridAttribute grid_infos = 3;
}

message SubdivideGridsRequest {
    repeated int32 levels = 1;
    repeated int32 global_ids = 2;
    int32 batch_size = 3;
}

message SubdivideGridsResponse {
    common.Status status = 1;
    string message = 2;
    repeated string grid_keys = 3;
}
